{"version":3,"sources":["movies.js"],"names":["movies","require","requestDefaults","method","url","t","request","Object","assign","inject","then","response","is","statusCode","result"],"mappings":";;AAAA;;;;AACA;;;;;;AACA,IAAIA,SAASC,QAAQ,wBAAR,CAAb;;AAEA,MAAMC,kBAAkB;AACtBC,UAAQ,KADc;AAEtBC,OAAK;AAFiB,CAAxB;;AAKA,mBAAK,uCAAL,EAA8CC,KAAK;AACjD,QAAMC,UAAUC,OAAOC,MAAP,CAAc,EAAd,EAAkBN,eAAlB,EAAmC,EAAnC,CAAhB;;AAEA,SAAO,iBAAOO,MAAP,CAAcH,OAAd,EACJI,IADI,CACCC,YAAY;AAChBN,MAAEO,EAAF,CAAKD,SAASE,UAAd,EAA0B,GAA1B,EAA+B,oBAA/B;AACAR,MAAEO,EAAF,CAAKD,SAASG,MAAd,EAAsBd,MAAtB,EAA8B,aAA9B;AACD,GAJI,CAAP;AAKD,CARD","file":"movies.js","sourcesContent":["import test from 'ava';\nimport server from '../server';\nvar movies = require('../lib/fixtures/movies');\n\nconst requestDefaults = {\n  method: 'GET',\n  url: '/v1/api/movies',\n};\n\ntest('endpoint test | GET /movies -> 200 OK', t => {\n  const request = Object.assign({}, requestDefaults, {});\n\n  return server.inject(request)\n    .then(response => {\n      t.is(response.statusCode, 200, 'status code is 200');\n      t.is(response.result, movies, 'deep equals');\n    });\n});\n"]}